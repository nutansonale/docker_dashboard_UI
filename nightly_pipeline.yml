name: Nightly Pipeline
true:
  workflow_dispatch: null
env:
  ASPADMIN_ARTIFACTORY_PASS: ${{ secrets.ASPADMIN_ARTIFACTORY_PASS }}
  ASPADMIN_ARTIFACTORY_USER: ${{ secrets.ASPADMIN_ARTIFACTORY_USER }}
  DAW_ARTIFACTORY_PASS: ${{ secrets.DAW_ARTIFACTORY_PASS }}
  DAW_ARTIFACTORY_USER: ${{ secrets.DAW_ARTIFACTORY_USER }}
  DAW_FUNCTIONAL_PASS: ${{ secrets.DAW_FUNCTIONAL_PASS }}
  DAW_FUNCTIONAL_PASS1: ${{ secrets.DAW_FUNCTIONAL_PASS1 }}
  DAW_FUNCTIONAL_USER: ${{ secrets.DAW_FUNCTIONAL_USER }}
  DAW_FUNCTIONAL_USER1: ${{ secrets.DAW_FUNCTIONAL_USER1 }}
  DOCKER_ARTIFACTORY_PASS: ${{ secrets.DOCKER_ARTIFACTORY_PASS }}
  DOCKER_ARTIFACTORY_USER: ${{ secrets.DOCKER_ARTIFACTORY_USER }}
  docker_hspd_pass: ${{ secrets.docker_hspd_pass }}
  docker_hspd_user: ${{ secrets.docker_hspd_user }}
  http_proxy: http://185.46.212.97:9480
  https_proxy: http://185.46.212.97:9480
  no_proxy: docker.eu1.hsdp.io,artifactory-ehv.ta.philips.com,tfsemea1.ta.philips.com,ingbtcpic2lx253.blr.pin.philips.com,blackduck.philips.com,tfssand.ta.philips.com,161.85.28.192,161.85.23.144,ingbtcpic5dtm55,tfssand.ta.philips.com,130.147.188.46,sonarqube-pic.ta.philips.com
jobs:
  NIGHTLY_Build:
    container:
      image: psi2m-serviciability-docker-local.artifactory.pic.philips.com/dawnextgen:latest
      volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    name: Nigthly_Build
    runs-on: ${{ vars.HOST }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Caching m2
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: /root/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - name: Build & Sonar
      run: "cd source mvn -s ../settings.xml deploy -B sonar:sonar \\\n  -Dsonar.login=${{\
        \ secrets.SONAR_LOGIN }} \\\n  -Dsonar.host.url=https://sonarqube-pic.ta.philips.com/sonar\
        \ \\\n  -Dsonar.projectBaseDir=. \\\n  -Dsonar.sourceEncoding=UTF-8 \\\n \
        \ -Dsonar.qualitygate.wait=false \\\n  -Dsonar.branch.name=$GITHUB_REF_NAME\
        \ \\\n  -Dsonar.coverage.jacoco.xmlReportPaths=AggReport/target/jacoco-aggregate-customization/jacoco.xml\
        \ \\\n  -Dsonar.javascript.lcov.reportPaths=applications/application-web/dawApplication/unitTesting/lcov/lcov.info\
        \ \\\n  -Dsonar.junit.reportPaths=source/**/target/surefire-reports \\\n \
        \ -Dsonar.verbose=true\\\n -Dsonar.projectKey=psi2m-DAWNextGen-DAWNG_test\
        \ \\\n  -Dsonar.projectName=psi2m-DAWNextGen-DAWNG_test\n"
    - name: Setup Java for Blackduck
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '11'
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - env:
        DETECT_PROJECT_NAME: ImCS_DAW
        DETECT_PROJECT_VERSION_NAME: DAWNEXTGEN_DAWNG__test
      name: Blackduck_scan
      uses: synopsys-sig/detect-action@v0.3.2
      with:
        blackduck-api-token: ${{ secrets.BLACKDUCK_TOKEN }}
        blackduck-url: https://blackduck.philips.com
        detect-version: 7.13.2
        github-token: ${{ secrets.GITHUB_TOKEN }}
        scan-mode: INTELLIGENT
    - env:
        FORTIFY_APPLICATION_NAME: PSI2M_DAWNEXTGEN
        FORTIFY_HOST_URL: https://fortify.philips.com/ssc
        FORTIFY_TOKEN: ${{ secrets.FORTIFY_TOKEN }}
        FORTIFY_VERSION_NAME: DAWNEXTGEN_DAWNG__test
      name: Fortify Nightly Scan
      uses: philips-internal/fortify-scan-action@main
      with:
        additional_params: -source 11 -cp ./**/*.class:./artifacts/*.jar:./test/java/**
          ./**/*.java -exclude ./**/*.sql -exclude **/node_modules/* -exclude **/test/*
          -exclude **/db-scripts/*
        build_id: test_fortify_scan_java
        fail_on_error: false
        fortify_output_file: fortify_scan_java
    timeout-minutes: 1000
